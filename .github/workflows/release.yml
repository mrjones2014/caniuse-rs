name: Release to crates.io and GitHub Releases
on:
  push:
    tags:
      - 'v*'

jobs:
  lint-with-clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - uses: actions-rs/cargo@v1
        with:
          command: clippy

  build-linux:
    runs-on: ubuntu-latest
    needs: lint-with-clippy
    outputs: # map step output to job output for use in the GitHub Release job
      caniuse-linux-x86: ${{ steps.build-linux.outputs.caniuse-linux-x86 }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Install Targets
        run: make install-targets-linux
      - name: Build Linux
        id: build-linux
        run: |
          make build-linux
          echo "::set-output name=caniuse-linux-x86::target/x86_64-unknown-linux-gnu/release/caniuse"

  build-macos-x86:
    runs-on: macos-11
    needs: lint-with-clippy
    outputs: # map step output to job output for use in the GitHub Release job
      caniuse-macos-x86: ${{ steps.build-macos-x86.outputs.caniuse-macos-x86 }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Install Targets
        run: make install-targets-mac-x86
      - name: Build MacOS
        id: build-macos-x86
        run: |
          make build-macos-x86
          echo "::set-output name=caniuse-macos-x86::target/x86_64-apple-darwin/release/caniuse"

  build-macos-arm:
    runs-on: macos-11
    needs: lint-with-clippy
    outputs: # map step output to job output for use in the GitHub Release job
      caniuse-macos-arm: ${{ steps.build-macos-arm.outputs.caniuse-macos-arm }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Install Targets
        run: make install-targets-mac-arm
      - name: Build MacOS
        id: build-macos-arm
        run: |
          make build-macos-arm
          echo "::set-output name=caniuse-macos-arm::target/aarch64-apple-darwin/release/caniuse"

  build-alfred-workflows:
    runs-on: macos-11
    needs: [build-macos-x86, build-macos-arm]
    outputs: # map step output to job output for use in the GitHub Release job
      alfred-workflow-file-x86: ${{ steps.build-alfred-workflows.outputs.alfred-workflow-file-x86 }}
      alfred-workflow-file-arm: ${{ steps.build-alfred-workflows.outputs.alfred-workflow-file-arm }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Create Alfred Workflow File
        id: build-alfred-workflows
        run: |
          make WORKFLOW_FILE_NAME="caniuse-x86.alfredworkflow" CANIUSE_BIN="${{ needs.build-macos-x86.outputs.caniuse-macos-x86 }}" alfred-workflow
          make WORKFLOW_FILE_NAME="caniuse-arm.alfredworkflow" CANIUSE_BIN="${{ needs.build-macos-arm.outputs.caniuse-macos-arm }}" alfred-workflow
          echo "::set-output name=alfred-workflow-file-x86::caniuse-x86.alfredworkflow"
          echo "::set-output name=alfred-workflow-file-arm::caniuse-arm.alfredworkflow"

  create-github-release:
    runs-on: ubuntu-latest
    needs: [build-linux, build-macos-x86, build-macos-arm, build-alfred-workflows]
    steps:
      - uses: actions/checkout@v2
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          generate_release_notes: true
          fail_on_unmatched_files: true
          files: |
            ${{ needs.build-macos-x86.outputs.caniuse-macos-x86 }}
            ${{ needs.build-macos-arm.outputs.caniuse-macos-arm }}
            ${{ needs.build-linux.outputs.caniuse-linux-x86 }}
            ${{ needs.build-alfred-workflows.outputs.alfred-workflow-file-x86 }}
            ${{ needs.build-alfred-workflows.outputs.alfred-workflow-file-arm }}

  cargo-publish:
    runs-on: ubuntu-latest
    needs: create-github-release
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Cargo Publish
        env:
          CARGO_TOKEN: ${{ secrets.CARGO_TOKEN }}
        run: make publish
